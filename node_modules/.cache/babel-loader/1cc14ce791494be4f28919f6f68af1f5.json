{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/components/Navbar2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar2(props) {\n  _s();\n\n  const [allRecipe, setAllRecipe] = useState([]);\n  useEffect(() => {\n    let allRec = [];\n    Object.entries(props).map(([key, value]) => allRec.push(value.name));\n    setAllRecipe(allRec);\n  }, [props]);\n  const [suggestions, setSuggestions] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const onTextChanged = e => {\n    const value = e.target.value;\n    console.log(value);\n    let suggestions = [];\n\n    if (value.length > 2) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = allRecipe.sort().filter(v => regex.test(v));\n      suggestions = [...new Set(suggestions)]; //deletes duplicates\n    }\n\n    console.log(value);\n    setSuggestions(suggestions);\n    setText(value);\n  };\n\n  const suggestionSelected = value => {\n    setText(value);\n    setSuggestions([]);\n  };\n\n  const [renderSuggestions, setRenderSuggestions] = useState( /*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 64\n  }, this));\n  useEffect(() => {\n    const renderSuggestion = () => {\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      return (//Here in suggestions are all the words that start with the inputed letters\n        //We haveto find a way to not include repeated ones\n        suggestions.map((recipes, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n          onClick: () => suggestionSelected(recipes),\n          className: \"dropdown-options\",\n          value: recipes,\n          children: recipes\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 51\n        }, this))\n      );\n    };\n\n    setRenderSuggestions(renderSuggestion);\n  }, [suggestions]);\n\n  const showSearchedCards = async () => {\n    const result = await fetch(`/api/recipes/${text}`);\n    const body = await result.json();\n    props.setRecipeInfo(body);\n    props.setCount(body.length);\n    console.log(text);\n\n    if (!text) {\n      props.setSearch(\"Current Recipes\");\n    } else {\n      props.setSearch(text);\n    }\n  };\n\n  if (props.willContainSearchBar) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"College Kitchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-chef-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          id: \"home\",\n          to: \"/Home\",\n          className: \"icon-hover\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          id: \"chef\",\n          className: \"icon-hover\",\n          to: {\n            pathname: `/Profile`,\n            aboutProps: {\n              setRecipeInfo: props.setRecipeInfo\n            }\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"College Kitchen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: text,\n            onChange: onTextChanged,\n            type: \"text\",\n            placeholder: \"Search..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"search-dropdown\",\n            children: renderSuggestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: showSearchedCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"home-chef-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          id: \"home\",\n          to: \"/Home\",\n          className: \"icon-hover\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          id: \"chef\",\n          className: \"icon-hover\",\n          to: {\n            pathname: `/Profile`,\n            aboutProps: {\n              setRecipeInfo: props.setRecipeInfo\n            }\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Navbar2, \"LxYGQ2yEwFw+bM0vEwbJd1KWOmo=\");\n\n_c = Navbar2;\nexport default Navbar2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar2\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/components/Navbar2.js"],"names":["React","useState","useEffect","Link","Navbar2","props","allRecipe","setAllRecipe","allRec","Object","entries","map","key","value","push","name","suggestions","setSuggestions","text","setText","onTextChanged","e","target","console","log","length","regex","RegExp","sort","filter","v","test","Set","suggestionSelected","renderSuggestions","setRenderSuggestions","renderSuggestion","recipes","showSearchedCards","result","fetch","body","json","setRecipeInfo","setCount","setSearch","willContainSearchBar","pathname","aboutProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction Navbar2(props) {\n\n    const [allRecipe, setAllRecipe] = useState([]);\n\n    useEffect (() => {\n        let allRec = [];\n        Object.entries(props).map(([key, value]) => \n            allRec.push(value.name)\n        )\n        setAllRecipe(allRec);\n    }, [props]);\n\n    const [suggestions, setSuggestions] = useState([]);\n    const [text, setText] = useState(\"\");\n\n\n    const onTextChanged = (e) => {\n        const value = e.target.value;\n        console.log(value);\n        let suggestions = [];\n        if (value.length > 2) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = allRecipe.sort().filter(v => regex.test(v));\n            suggestions = [...new Set(suggestions)]; //deletes duplicates\n        }\n        console.log(value);\n        setSuggestions(suggestions);\n        setText(value);\n    };\n\n    const suggestionSelected = (value) => {\n        setText(value);\n        setSuggestions([]);\n    }\n\n    const [renderSuggestions, setRenderSuggestions] = useState(<option></option>);\n\n    useEffect (() => {\n        const renderSuggestion = () => {\n            if (suggestions.length === 0) {\n                return null;\n            }\n            return (\n                //Here in suggestions are all the words that start with the inputed letters\n                //We haveto find a way to not include repeated ones\n                suggestions.map((recipes, key) => <option onClick={() => suggestionSelected(recipes)} key={key} className=\"dropdown-options\" value={recipes}>{recipes}</option>)\n            )\n        };\n        setRenderSuggestions(renderSuggestion);\n    }, [suggestions]);\n\n    const showSearchedCards = async () => {\n        const result = await fetch(`/api/recipes/${text}`);\n        const body = await result.json();\n        props.setRecipeInfo(body);\n        props.setCount(body.length);\n        console.log(text)\n        if (!text) {\n            props.setSearch(\"Current Recipes\");\n        } else {\n            props.setSearch(text);\n        }\n    }\n    if (props.willContainSearchBar) {\n        return (\n            <div id=\"navbar2\">\n                <h1>College Kitchen</h1>\n                \n                <div id=\"home-chef-container\">\n                    <Link id=\"home\" to=\"/Home\" className=\"icon-hover\"> </Link>\n                    <Link id=\"chef\" className=\"icon-hover\" to={{\n                        pathname: `/Profile`,\n                        aboutProps: {\n                            setRecipeInfo: props.setRecipeInfo\n                        }\n                    }}> </Link>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div id=\"navbar2\">\n                <h1>College Kitchen</h1>\n    \n                <div id=\"search-bar\">\n                    <div>\n                        <input value={text} onChange={onTextChanged} type=\"text\" placeholder=\"Search..\"></input>\n                        <div id=\"search-dropdown\">\n                            {renderSuggestions}\n                        </div>\n                    </div>\n                    <button type=\"submit\" onClick={showSearchedCards}></button>\n                </div>\n                \n                <div id=\"home-chef-container\">\n                    <Link id=\"home\" to=\"/Home\" className=\"icon-hover\"> </Link>\n                    <Link id=\"chef\" className=\"icon-hover\" to={{\n                        pathname: `/Profile`,\n                        aboutProps: {\n                            setRecipeInfo: props.setRecipeInfo\n                        }\n                    }}> </Link>\n                </div>\n            </div>\n        );\n\n    }\n\n    \n}\n\nexport default Navbar2;"]},"metadata":{},"sourceType":"module"}