{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/pages/AddRecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddRecipeForm(props) {\n  _s();\n\n  if (props.location.aboutProps === undefined) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"./Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n\n  const [name, setName] = useState('');\n  const [ingredientsText, setIngredientsText] = useState([]);\n  const [stepsText, setStepsText] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [type, setType] = useState('');\n  const [ingredientsCount, setIngredientsCount] = useState(0); //##############################  Adding/Deleting more input lists to add more ingredients  ##################################//\n\n  const [ingredients, setIngredients] = useState([/*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"input-style\",\n    rows: \"1\",\n    cols: \"50\",\n    value: ingredientsText[0],\n    onChange: event => setIngredientsText([event.target.value, ...ingredientsText.slice()])\n  }, ingredientsCount, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 53\n  }, this)]);\n\n  const addIngredient = () => {\n    const num = ingredientsCount + 1;\n    setIngredients([...ingredients, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-style\",\n      rows: \"1\",\n      cols: \"50\",\n      value: ingredientsText[num],\n      onChange: event => {\n        let arr1 = ingredientsText;\n        arr1[num] = event.target.value;\n        setIngredientsText([...arr1]);\n      }\n    }, ingredientsCount + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 41\n    }, this)]);\n    setIngredientsCount(ingredientsCount + 1);\n  };\n\n  const deleteIngredient = () => {\n    if (ingredients.length > 1) {\n      let arr = ingredients;\n      arr.pop();\n      setIngredients([...arr]);\n      setIngredientsCount(ingredientsCount - 1);\n    }\n  }; //###################################################################################################################//\n  //######################################  Adding/Deleting more input lists to add more steps  ##################################//\n\n\n  const [stepsCount, setStepsCount] = useState(0);\n  const [steps, setSteps] = useState([/*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"input-style\",\n    rows: \"4\",\n    cols: \"50\",\n    value: stepsText[0],\n    onChange: event => setStepsText([event.target.value, ...stepsText.slice()])\n  }, stepsCount, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 41\n  }, this)]);\n\n  const addStep = () => {\n    const num = stepsCount + 1;\n    setSteps([...steps, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-style\",\n      rows: \"4\",\n      cols: \"50\",\n      value: stepsText[num],\n      onChange: event => {\n        let arr1 = stepsText;\n        arr1[num] = event.target.value;\n        setStepsText([...arr1]);\n      }\n    }, stepsCount + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }, this)]);\n    setStepsCount(stepsCount + 1);\n  };\n\n  const deleteStep = () => {\n    if (steps.length > 1) {\n      let arr = steps;\n      arr.pop();\n      setSteps([...arr]);\n      setStepsCount(stepsCount - 1);\n    }\n  }; //###################################################################################################################//\n\n\n  const addRecipe = async () => {\n    fetch(`/api/profile/post`, {\n      method: 'post',\n      body: JSON.stringify({\n        name,\n        estimatedPrice: price,\n        ingredients: ingredientsText,\n        steps: stepsText,\n        eatingTime: type\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    setName(\"\");\n    setIngredientsText([]);\n    setStepsText([]);\n    setPrice(0);\n    setType(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"add-recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n      willContainSearchBar: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recipe Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-style\",\n          type: \"text\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ingredients:\", ingredients]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adding-text-area icon-hover\",\n          onClick: () => addIngredient()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleting-text-area icon-hover\",\n          onClick: () => deleteIngredient()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Steps:\", steps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adding-text-area icon-hover\",\n          onClick: () => addStep()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deleting-text-area icon-hover\",\n          onClick: () => deleteStep()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Estimated Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-style\",\n          type: \"number\",\n          min: \"0\",\n          value: price,\n          onChange: event => setPrice(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"input-style\",\n          type: \"text\",\n          value: type,\n          onChange: event => setType(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Dessert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Snacks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Drinks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: addRecipe,\n        to: {\n          pathname: `/Profile`,\n          aboutProps: {\n            setRecipeInfo: props.location.aboutProps.setRecipeInfo\n          }\n        },\n        children: \" Add Recipe \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 13\n  }, this);\n}\n\n_s(AddRecipeForm, \"I/D5IaWSQ1dPhXMFevcny4lMNvU=\");\n\n_c = AddRecipeForm;\nexport default AddRecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipeForm\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/pages/AddRecipeForm.js"],"names":["React","useState","Navbar2","Link","AddRecipeForm","props","location","aboutProps","undefined","name","setName","ingredientsText","setIngredientsText","stepsText","setStepsText","price","setPrice","type","setType","ingredientsCount","setIngredientsCount","ingredients","setIngredients","event","target","value","slice","addIngredient","num","arr1","deleteIngredient","length","arr","pop","stepsCount","setStepsCount","steps","setSteps","addStep","deleteStep","addRecipe","fetch","method","body","JSON","stringify","estimatedPrice","eatingTime","headers","pathname","setRecipeInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAAgC;AAAA;;AAE5B,MAAIA,KAAK,CAACC,QAAN,CAAeC,UAAf,KAA8BC,SAAlC,EAA6C;AACzC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACkB,gBAAD,EAAmBC,mBAAnB,IAA0CnB,QAAQ,CAAC,CAAD,CAAxD,CAZ4B,CAc5B;;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,cAAC;AAAiC,IAAA,SAAS,EAAC,aAA3C;AAAyD,IAAA,IAAI,EAAC,GAA9D;AAAkE,IAAA,IAAI,EAAC,IAAvE;AAA4E,IAAA,KAAK,EAAEU,eAAe,CAAC,CAAD,CAAlG;AAAuG,IAAA,QAAQ,EAAGY,KAAD,IAAWX,kBAAkB,CAAE,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,EAAqB,GAAGd,eAAe,CAACe,KAAhB,EAAxB,CAAF;AAA9I,KAAeP,gBAAf;AAAA;AAAA;AAAA;AAAA,UAAD,CAAD,CAA9C;;AACA,QAAMQ,aAAa,GAAG,MAAM;AACxB,UAAMC,GAAG,GAAGT,gBAAgB,GAAG,CAA/B;AACAG,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,eAAiB;AAAqC,MAAA,SAAS,EAAC,aAA/C;AAA6D,MAAA,IAAI,EAAC,GAAlE;AAAsE,MAAA,IAAI,EAAC,IAA3E;AAAgF,MAAA,KAAK,EAAEV,eAAe,CAACiB,GAAD,CAAtG;AAA6G,MAAA,QAAQ,EAAGL,KAAD,IAAW;AACd,YAAIM,IAAI,GAAGlB,eAAX;AACAkB,QAAAA,IAAI,CAACD,GAAD,CAAJ,GAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAb,QAAAA,kBAAkB,CAAC,CAAC,GAAGiB,IAAJ,CAAD,CAAlB;AAA+B;AAHnJ,OAAeV,gBAAgB,GAAG,CAAlC;AAAA;AAAA;AAAA;AAAA,YAAjB,CAAD,CAAd;AAKAC,IAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACH,GARD;;AAUA,QAAMW,gBAAgB,GAAG,MAAM;AAC3B,QAAIT,WAAW,CAACU,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,UAAIC,GAAG,GAAGX,WAAV;AACAW,MAAAA,GAAG,CAACC,GAAJ;AACAX,MAAAA,cAAc,CAAC,CAAC,GAAGU,GAAJ,CAAD,CAAd;AACAZ,MAAAA,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;AACH;AAEJ,GARD,CA1B4B,CAmC5B;AAEA;;;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,cAAC;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAmD,IAAA,IAAI,EAAC,GAAxD;AAA4D,IAAA,IAAI,EAAC,IAAjE;AAAsE,IAAA,KAAK,EAAEY,SAAS,CAAC,CAAD,CAAtF;AAA2F,IAAA,QAAQ,EAAGU,KAAD,IAAWT,YAAY,CAAE,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,EAAqB,GAAGZ,SAAS,CAACa,KAAV,EAAxB,CAAF;AAA5H,KAAeQ,UAAf;AAAA;AAAA;AAAA;AAAA,UAAD,CAAD,CAAlC;;AACA,QAAMI,OAAO,GAAG,MAAM;AAClB,UAAMV,GAAG,GAAGM,UAAU,GAAG,CAAzB;AACAG,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,eAAW;AAA+B,MAAA,SAAS,EAAC,aAAzC;AAAuD,MAAA,IAAI,EAAC,GAA5D;AAAgE,MAAA,IAAI,EAAC,IAArE;AAA0E,MAAA,KAAK,EAAEvB,SAAS,CAACe,GAAD,CAA1F;AAAiG,MAAA,QAAQ,EAAGL,KAAD,IAAW;AACV,YAAIM,IAAI,GAAGhB,SAAX;AACAgB,QAAAA,IAAI,CAACD,GAAD,CAAJ,GAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAX,QAAAA,YAAY,CAAC,CAAC,GAAGe,IAAJ,CAAD,CAAZ;AAAyB;AAHrI,OAAeK,UAAU,GAAG,CAA5B;AAAA;AAAA;AAAA;AAAA,YAAX,CAAD,CAAR;AAIAC,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAPD;;AASA,QAAMK,UAAU,GAAG,MAAM;AACrB,QAAIH,KAAK,CAACL,MAAN,GAAe,CAAnB,EAAsB;AAClB,UAAIC,GAAG,GAAGI,KAAV;AACAJ,MAAAA,GAAG,CAACC,GAAJ;AACAI,MAAAA,QAAQ,CAAC,CAAC,GAAGL,GAAJ,CAAD,CAAR;AACAG,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH;AACJ,GAPD,CAjD4B,CAyD5B;;;AAEA,QAAMM,SAAS,GAAG,YAAW;AACrBC,IAAAA,KAAK,CAAE,mBAAF,EAAsB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACpC,QAAAA,IAAD;AAAOqC,QAAAA,cAAc,EAAE/B,KAAvB;AAA8BM,QAAAA,WAAW,EAAEV,eAA3C;AAA4DyB,QAAAA,KAAK,EAAEvB,SAAnE;AAA8EkC,QAAAA,UAAU,EAAE9B;AAA1F,OAAf,CAFiB;AAGvB+B,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHc,KAAtB,CAAL;AAOAtC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACP,GAbD;;AAeI,sBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,oBAAoB,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,8BACI;AAAA,yCAEI;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,IAAI,EAAC,MAApC;AAA2C,UAAA,KAAK,EAAET,IAAlD;AAAwD,UAAA,QAAQ,EAAGc,KAAD,IAAWb,OAAO,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAApF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,mCAEKJ,WAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAA6C,UAAA,OAAO,EAAE,MAAKM,aAAa;AAAxE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,+BAAf;AAA+C,UAAA,OAAO,EAAE,MAAKG,gBAAgB;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAA,6BAEKM,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAmBI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,6BAAf;AAA6C,UAAA,OAAO,EAAE,MAAKE,OAAO;AAAlE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,+BAAf;AAA+C,UAAA,OAAO,EAAE,MAAKC,UAAU;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAwBI;AAAA,oDAEI;AAAO,UAAA,SAAS,EAAC,aAAjB;AAA+B,UAAA,IAAI,EAAC,QAApC;AAA6C,UAAA,GAAG,EAAC,GAAjD;AAAqD,UAAA,KAAK,EAAExB,KAA5D;AAAmE,UAAA,QAAQ,EAAGQ,KAAD,IAAWP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eA4BI;AAAA,yCAEI;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,KAAK,EAAER,IAAnD;AAAyD,UAAA,QAAQ,EAAGM,KAAD,IAAWL,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArF;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAuCI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAEe,SAAf;AAA0B,QAAA,EAAE,EAAE;AAC1BS,UAAAA,QAAQ,EAAG,UADe;AAE1B1C,UAAAA,UAAU,EAAE;AACR2C,YAAAA,aAAa,EAAE7C,KAAK,CAACC,QAAN,CAAeC,UAAf,CAA0B2C;AADjC;AAFc,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqDP;;GA/HQ9C,a;;KAAAA,a;AAiIT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport {Link} from 'react-router-dom';\n\nfunction AddRecipeForm( props ) {\n\n    if (props.location.aboutProps === undefined) {\n        return <Redirect to=\"./Home\" />;\n    }\n\n    const [name, setName] = useState('');\n    const [ingredientsText, setIngredientsText] = useState([]);\n    const [stepsText, setStepsText] = useState([]);\n    const [price, setPrice] = useState(0);\n    const [type, setType] = useState('');\n\n    const [ingredientsCount, setIngredientsCount] = useState(0);\n\n    //##############################  Adding/Deleting more input lists to add more ingredients  ##################################//\n    const [ingredients, setIngredients] = useState([<textarea key={ingredientsCount} className=\"input-style\" rows=\"1\" cols=\"50\" value={ingredientsText[0]} onChange={(event) => setIngredientsText( [event.target.value, ...ingredientsText.slice()] )} />]);\n    const addIngredient = () => {  \n        const num = ingredientsCount + 1;\n        setIngredients([...ingredients, <textarea key={ingredientsCount + 1} className=\"input-style\" rows=\"1\" cols=\"50\" value={ingredientsText[num]} onChange={(event) => { \n                                                                                                                                                            let arr1 = ingredientsText;\n                                                                                                                                                            arr1[num] = event.target.value;\n                                                                                                                                                            setIngredientsText([...arr1]) }}\n                                                                                                                                                            />]);\n        setIngredientsCount(ingredientsCount + 1);\n    }\n\n    const deleteIngredient = () => {\n        if (ingredients.length > 1) {\n            let arr = ingredients;\n            arr.pop();\n            setIngredients([...arr]);\n            setIngredientsCount(ingredientsCount - 1);\n        }\n       \n    }\n    //###################################################################################################################//\n\n    //######################################  Adding/Deleting more input lists to add more steps  ##################################//\n    const [stepsCount, setStepsCount] = useState(0);\n    const [steps, setSteps] = useState([<textarea key={stepsCount} className=\"input-style\" rows=\"4\" cols=\"50\" value={stepsText[0]} onChange={(event) => setStepsText( [event.target.value, ...stepsText.slice()] )}/>]);\n    const addStep = () => {\n        const num = stepsCount + 1;\n        setSteps([...steps, <textarea key={stepsCount + 1} className=\"input-style\" rows=\"4\" cols=\"50\" value={stepsText[num]} onChange={(event) => { \n                                                                                                                                        let arr1 = stepsText;\n                                                                                                                                        arr1[num] = event.target.value;\n                                                                                                                                        setStepsText([...arr1]) }}/> ]);\n        setStepsCount(stepsCount + 1);\n    }\n\n    const deleteStep = () => {\n        if (steps.length > 1) {\n            let arr = steps;\n            arr.pop();\n            setSteps([...arr]);\n            setStepsCount(stepsCount - 1);\n        }\n    }\n    //###################################################################################################################//\n\n    const addRecipe = async() => {\n            fetch(`/api/profile/post`, {\n                method: 'post',\n                body: JSON.stringify({name, estimatedPrice: price, ingredients: ingredientsText, steps: stepsText, eatingTime: type}),\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n            setName(\"\");\n            setIngredientsText([]);\n            setStepsText([]);\n            setPrice(0);\n            setType(\"\");\n    }\n\n        return (\n            <div id=\"add-recipe-form\">\n                <Navbar2 willContainSearchBar={true}/>\n                <h3>Recipe Creation</h3>\n                <div id=\"form\">\n                    <label>\n                        Name:\n                        <input className=\"input-style\" type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\n                    </label>\n                    <label>\n                        Ingredients:\n                        {ingredients}\n                    </label>\n                    <div>\n                        <div className=\"adding-text-area icon-hover\" onClick={()=> addIngredient()}></div>\n                        <div className=\"deleting-text-area icon-hover\" onClick={()=> deleteIngredient()}></div>\n                    </div>\n                    \n                    <label>\n                        Steps:\n                        {steps}\n                        {/* <textarea className=\"input-style\" rows=\"4\" cols=\"50\" value={stepsText} onChange={(event) => setStepsText(stepsText.push(event.target.value))}/> */}\n                    </label>\n                    <div>\n                        <div className=\"adding-text-area icon-hover\" onClick={()=> addStep()}></div>\n                        <div className=\"deleting-text-area icon-hover\" onClick={()=> deleteStep()}></div>\n                    </div>\n                    \n                    <label>\n                        Estimated Price:\n                        <input className=\"input-style\" type=\"number\" min=\"0\" value={price} onChange={(event) => setPrice(event.target.value)}/>\n                    </label>\n                    <label>\n                        Type:\n                        <select className=\"input-style\" type=\"text\" value={type} onChange={(event) => setType(event.target.value)}>\n                            <option>Lunch</option>\n                            <option>Dinner</option>\n                            <option>Breakfast</option>\n                            <option>Dessert</option>\n                            <option>Snacks</option>\n                            <option>Drinks</option>\n                        </select>\n                    </label>\n                    <Link onClick={addRecipe} to={{\n                        pathname: `/Profile`,\n                        aboutProps: {\n                            setRecipeInfo: props.location.aboutProps.setRecipeInfo\n                        }\n                    }}> Add Recipe </Link>\n                </div>\n            </div>\n        )\n    \n}\n\nexport default AddRecipeForm;"]},"metadata":{},"sourceType":"module"}