{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/pages/AddRecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddRecipeForm(props) {\n  _s();\n\n  const [finishedRecipe, setFinishedRecipe] = useState(false);\n  const [toggle, setToggle] = useState(false);\n  const [name, setName] = useState('');\n  const [ingredientsText, setIngredientsText] = useState([]);\n  const [stepsText, setStepsText] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [type, setType] = useState('');\n  const [ingredientsCount, setIngredientsCount] = useState(1);\n  const [ingredients, setIngredients] = useState([/*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"input-style\",\n    rows: \"4\",\n    cols: \"50\"\n  }, ingredientsCount, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 53\n  }, this)]);\n\n  const addIngredient = () => {\n    setIngredients([...ingredients, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-style\",\n      rows: \"4\",\n      cols: \"50\"\n    }, ingredientsCount + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 41\n    }, this)]);\n    setIngredientsCount(ingredientsCount + 1);\n    console.log(ingredientsText);\n  };\n\n  const [stepsCount, setStepsCount] = useState(1);\n  const [steps, setSteps] = useState([/*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"input-style\",\n    rows: \"4\",\n    cols: \"50\"\n  }, stepsCount, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 41\n  }, this)]);\n\n  const addStep = () => {\n    setSteps([...steps, /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-style\",\n      rows: \"4\",\n      cols: \"50\"\n    }, stepsCount + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }, this)]);\n    setStepsCount(stepsCount + 1);\n  };\n\n  const addRecipe = async () => {\n    const result = await fetch(`/api/profile/post`, {\n      method: 'post',\n      body: JSON.stringify({\n        name,\n        estimatedPrice: price,\n        ingredients: ingredientsText,\n        steps: stepsText,\n        eatingTime: type\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const body = await result.json();\n    props.location.aboutProps.setRecipeInfo(body);\n    setName(\"\");\n    setIngredientsText([]);\n    setStepsText([]);\n    setPrice(0);\n    setType(\"\");\n    setToggle(true);\n  };\n\n  const finishedCreatingRecipe = () => {\n    setToggle(false);\n  };\n\n  useEffect(() => {\n    if (!finishedRecipe) {\n      setFinishedRecipe(true);\n    } else {\n      setFinishedRecipe(false);\n    }\n  }, [toggle]);\n  console.log(finishedRecipe);\n\n  if (finishedRecipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"add-recipe-form\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n        willContainSearchBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recipe Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Profile\",\n        className: \"icon-hover\",\n        children: \" Finished \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"add-recipe-form\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar2, {\n        willContainSearchBar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recipe Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-style\",\n            type: \"text\",\n            value: name,\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ingredients:\", ingredients]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adding-text-area icon-hover\",\n          onClick: () => addIngredient()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Steps:\", steps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adding-text-area icon-hover\",\n          onClick: () => addStep()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Estimated Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-style\",\n            type: \"text\",\n            value: price,\n            onChange: event => setPrice(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"input-style\",\n            type: \"text\",\n            value: type,\n            onChange: event => setType(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Lunch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Breakfast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Dessert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Snacks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Drinks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addRecipe,\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AddRecipeForm, \"xFumTCRhsuBO3eSXP8DYn29mMOA=\");\n\n_c = AddRecipeForm;\nexport default AddRecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRecipeForm\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/pages/AddRecipeForm.js"],"names":["React","useState","useEffect","Navbar2","AddRecipeForm","props","finishedRecipe","setFinishedRecipe","toggle","setToggle","name","setName","ingredientsText","setIngredientsText","stepsText","setStepsText","price","setPrice","type","setType","ingredientsCount","setIngredientsCount","ingredients","setIngredients","addIngredient","console","log","stepsCount","setStepsCount","steps","setSteps","addStep","addRecipe","result","fetch","method","body","JSON","stringify","estimatedPrice","eatingTime","headers","json","location","aboutProps","setRecipeInfo","finishedCreatingRecipe","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Navbar2 from '../components/Navbar2';\n\nfunction AddRecipeForm( props ) {\n\n    const [finishedRecipe, setFinishedRecipe] = useState(false);\n    const [toggle, setToggle] = useState(false);\n\n    const [name, setName] = useState('');\n    const [ingredientsText, setIngredientsText] = useState([]);\n    const [stepsText, setStepsText] = useState([]);\n    const [price, setPrice] = useState(0);\n    const [type, setType] = useState('');\n\n    const [ingredientsCount, setIngredientsCount] = useState(1);\n    const [ingredients, setIngredients] = useState([<textarea key={ingredientsCount} className=\"input-style\" rows=\"4\" cols=\"50\"/>]);\n    const addIngredient = () => {  \n        setIngredients([...ingredients, <textarea key={ingredientsCount + 1} className=\"input-style\" rows=\"4\" cols=\"50\"/>]);\n        setIngredientsCount(ingredientsCount + 1);\n        console.log(ingredientsText)\n    }\n\n    const [stepsCount, setStepsCount] = useState(1);\n    const [steps, setSteps] = useState([<textarea key={stepsCount} className=\"input-style\" rows=\"4\" cols=\"50\"/>]);\n    const addStep = () => {\n        setSteps([...steps, <textarea key={stepsCount + 1} className=\"input-style\" rows=\"4\" cols=\"50\"/>]);\n        setStepsCount(stepsCount + 1);\n    }\n\n    const addRecipe = async() => {\n            const result = await fetch(`/api/profile/post`, {\n                method: 'post',\n                body: JSON.stringify({name, estimatedPrice: price, ingredients: ingredientsText, steps: stepsText, eatingTime: type}),\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n            const body = await result.json();\n            props.location.aboutProps.setRecipeInfo(body);\n            setName(\"\");\n            setIngredientsText([]);\n            setStepsText([]);\n            setPrice(0);\n            setType(\"\");\n            setToggle(true);\n    }\n\n    const finishedCreatingRecipe = ()=> {\n        setToggle(false);\n    }\n\n    useEffect(() => {\n        if (!finishedRecipe) {\n            setFinishedRecipe(true);\n        } else {\n            setFinishedRecipe(false);\n        }\n    }, [toggle])\n\n    console.log(finishedRecipe)\n    if (finishedRecipe) {\n\n        return (\n            <div id=\"add-recipe-form\">\n                <Navbar2 willContainSearchBar={true}/>\n                <h3>Recipe Creation</h3>\n                <Link to=\"/Profile\" className=\"icon-hover\"> Finished </Link>\n            </div>\n        )\n\n    } else {\n\n        return (\n            <div id=\"add-recipe-form\">\n                <Navbar2 willContainSearchBar={true}/>\n                <h3>Recipe Creation</h3>\n                <div id=\"form\">\n                    <label>\n                        Name:\n                        <input className=\"input-style\" type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\n                    </label>\n                    <label>\n                        Ingredients:\n                        {ingredients}\n                    </label>\n                    <div className=\"adding-text-area icon-hover\" onClick={()=> addIngredient()}></div>\n                    <label>\n                        Steps:\n                        {steps}\n                        {/* <textarea className=\"input-style\" rows=\"4\" cols=\"50\" value={stepsText} onChange={(event) => setStepsText(stepsText.push(event.target.value))}/> */}\n                    </label>\n                    <div className=\"adding-text-area icon-hover\" onClick={()=> addStep()}></div>\n                    <label>\n                        Estimated Price:\n                        <input className=\"input-style\" type=\"text\" value={price} onChange={(event) => setPrice(event.target.value)}/>\n                    </label>\n                    <label>\n                        Type:\n                        <select className=\"input-style\" type=\"text\" value={type} onChange={(event) => setType(event.target.value)}>\n                            <option>Lunch</option>\n                            <option>Dinner</option>\n                            <option>Breakfast</option>\n                            <option>Dessert</option>\n                            <option>Snacks</option>\n                            <option>Drinks</option>\n                        </select>\n                    </label>\n                    <button onClick={addRecipe}>Add Comment</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddRecipeForm;"]},"metadata":{},"sourceType":"module"}