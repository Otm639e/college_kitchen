{"ast":null,"code":"import _regeneratorRuntime from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import FoodCards from'../components/FoodCards';import Navbar2 from'../components/Navbar2';import{useGoogleAuth}from'../components/GoogleAuthProvider';import{Link}from'react-router-dom';import ProfilePersonolize from'../components/ProfilePersonolize';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfilePage(){var _useGoogleAuth=useGoogleAuth(),googleUser=_useGoogleAuth.googleUser;var tokenID=googleUser.tokenId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),recipes=_useState2[0],setRecipeInfo=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),num=_useState4[0],setNum=_useState4[1];var _useState5=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState6=_slicedToArray(_useState5,2),listCards=_useState6[0],setListCards=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),userInformation=_useState8[0],setUserInformation=_useState8[1];var _useState9=useState('2021'),_useState10=_slicedToArray(_useState9,2),yearJoined=_useState10[0],setYearJoined=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showProfileSettings=_useState12[0],setShowProfileSettings=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),name=_useState14[0],setName=_useState14[1];//Get all profile info\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/api/profile/info/\".concat(tokenID));case 2:result=_context.sent;_context.next=5;return result.json();case 5:body=_context.sent;setUserInformation(body.bioInfo);setYearJoined(body.yearJoined);setName(body.name);case 9:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();});useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"/api/userID/\".concat(tokenID));case 2:result=_context2.sent;_context2.next=5;return result.json();case 5:body=_context2.sent;setRecipeInfo(body);setNum(body.length);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[tokenID]);useEffect(function(){var cards;if(recipes.length<1){cards=/*#__PURE__*/_jsx(\"p\",{children:\"No Resipes\"});}else{cards=recipes.map(function(recipe){return/*#__PURE__*/_jsx(FoodCards,{id:recipe._id,foodName:recipe.name,estimatedPrice:recipe.estimatedPrice,ingredients:recipe.ingredients,steps:recipe.steps},recipe._id);});}setListCards(cards);},[recipes]);useEffect(function(){if(showProfileSettings){setSettingsIcon(/*#__PURE__*/_jsx(ProfilePersonolize,{setShowProfileSettings:setShowProfileSettings}));}else{setSettingsIcon(/*#__PURE__*/_jsx(\"div\",{id:\"setting-icon\",className:\"icon-hover\",onClick:function onClick(){return setShowProfileSettings(true);}}));}},[showProfileSettings]);var _useState15=useState(),_useState16=_slicedToArray(_useState15,2),settingsIcon=_useState16[0],setSettingsIcon=_useState16[1];return/*#__PURE__*/_jsxs(\"div\",{id:\"profile-page\",children:[/*#__PURE__*/_jsx(Navbar2,{willContainSearchBar:true}),/*#__PURE__*/_jsxs(\"div\",{id:\"profile-info\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"div-container1\",children:[/*#__PURE__*/_jsx(\"h1\",{children:name}),settingsIcon]}),/*#__PURE__*/_jsx(\"p\",{children:userInformation}),/*#__PURE__*/_jsx(\"a\",{href:\"https://youtube.com\",children:\" Visit Website \"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"profile-contributed-cards\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"div-container2\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Contributed \",num,\" recipes since \",yearJoined]}),/*#__PURE__*/_jsx(Link,{id:\"add-icon\",className:\"icon-hover\",to:\"/Recipe-Creation\",children:\" \"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"food-cards-container\",children:listCards})]})]});}export default ProfilePage;","map":{"version":3,"sources":["/Users/omar/Desktop/Full_Stack_app/college-kitchen/src/pages/ProfilePage.js"],"names":["React","useState","useEffect","FoodCards","Navbar2","useGoogleAuth","Link","ProfilePersonolize","ProfilePage","googleUser","tokenID","tokenId","recipes","setRecipeInfo","num","setNum","listCards","setListCards","userInformation","setUserInformation","yearJoined","setYearJoined","showProfileSettings","setShowProfileSettings","name","setName","fetchData","fetch","result","json","body","bioInfo","length","cards","map","recipe","_id","estimatedPrice","ingredients","steps","setSettingsIcon","settingsIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FoodCards from '../components/FoodCards';\nimport Navbar2 from '../components/Navbar2';\nimport { useGoogleAuth } from '../components/GoogleAuthProvider';\nimport { Link } from 'react-router-dom';\nimport ProfilePersonolize from '../components/ProfilePersonolize';\n\nfunction ProfilePage() {\n\n    const { googleUser } = useGoogleAuth();\n    const tokenID = googleUser.tokenId;\n    const [recipes, setRecipeInfo] = useState([]);\n    const [num, setNum] = useState(0);\n    const [listCards, setListCards] = useState(<div></div>);\n    const [userInformation, setUserInformation] = useState('');\n    const [yearJoined, setYearJoined] = useState('2021');\n    const [showProfileSettings, setShowProfileSettings] = useState(false);\n    const [name, setName] = useState();\n\n    \n\n    //Get all profile info\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/profile/info/${tokenID}`);\n            const body = await result.json();\n            setUserInformation(body.bioInfo);\n            setYearJoined(body.yearJoined);\n            setName(body.name);\n        }\n        fetchData();\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch(`/api/userID/${tokenID}`);\n            const body = await result.json();\n            setRecipeInfo(body);\n            setNum(body.length);\n        }\n        fetchData();\n    }, [tokenID]);\n\n    useEffect(() => {\n        let cards;\n        if (recipes.length < 1) {\n            cards = <p>No Resipes</p>;\n        } else {\n            cards = recipes.map((recipe) =>\n                <FoodCards key={recipe._id} id={recipe._id} foodName={recipe.name} estimatedPrice={recipe.estimatedPrice}  ingredients={recipe.ingredients} steps={recipe.steps}/>\n            );\n        }\n        setListCards(cards);\n        \n\n    }, [recipes]);\n\n    useEffect(() => {\n        if (showProfileSettings) {\n            setSettingsIcon(<ProfilePersonolize setShowProfileSettings={setShowProfileSettings}/>);\n        } else {\n            setSettingsIcon(<div id=\"setting-icon\" className=\"icon-hover\" onClick={() => setShowProfileSettings(true)}></div>);\n        }\n        \n    }, [showProfileSettings]);\n\n    const [settingsIcon, setSettingsIcon] = useState();\n\n\n\n    return (\n        <div id=\"profile-page\">\n            <Navbar2 willContainSearchBar={true}/>\n            <div id=\"profile-info\">\n                <div id=\"div-container1\">\n                    <h1>{name}</h1>\n                    {settingsIcon}\n                </div>\n                <p>{userInformation}</p>\n                <a href=\"https://youtube.com\"> Visit Website </a>\n            </div>\n            <div id=\"profile-contributed-cards\">\n                <div id=\"div-container2\">\n                    <p>Contributed {num} recipes since {yearJoined}</p>\n                    <Link id=\"add-icon\" className=\"icon-hover\" to=\"/Recipe-Creation\"> </Link> \n                </div>\n                <div id=\"food-cards-container\">\n                    {listCards}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}