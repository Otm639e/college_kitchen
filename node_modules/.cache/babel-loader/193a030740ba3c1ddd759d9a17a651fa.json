{"ast":null,"code":"import _objectSpread from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/omar/Desktop/Full_Stack_app/college-kitchen/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Navbar2 from'../components/Navbar2';import RecomendationCard from'../components/RecomendationCard';import FoodCards from'../components/FoodCards';//import Eggs from '../imgs/eggs.jpeg';\nimport Footer2 from'../components/Footer2';import{useGoogleAuth}from'../components/GoogleAuthProvider';// ############################## Important Note!!!!! ####################################################\n// ###### Maybe we can do the stuff we just need once (get methods for all recipes) in the App.js!!! ######\n// #######################################################################################################\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HomePage(){var _useGoogleAuth=useGoogleAuth(),googleUser=_useGoogleAuth.googleUser;var tokenID=googleUser.tokenId;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState('Current Recipes'),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),recipes=_useState6[0],setRecipeInfo=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),allRecipes=_useState8[0],setAllRecipes=_useState8[1];//Trial of sending tokenId to backend\nuseEffect(function(){if(tokenID!==undefined){var sendIdToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"/api/tokensignin\",{method:'POST',body:JSON.stringify({token:tokenID,year:new Date().getUTCFullYear()}),headers:{'Content-Type':'application/json'}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function sendIdToken(){return _ref.apply(this,arguments);};}();sendIdToken();}},[tokenID]);//Get all recipes\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result,body;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('/api/recipes');case 2:result=_context2.sent;_context2.next=5;return result.json();case 5:body=_context2.sent;setAllRecipes(body);setRecipeInfo(body);setCount(body.length);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[]);var _useState9=useState(/*#__PURE__*/_jsx(\"div\",{})),_useState10=_slicedToArray(_useState9,2),listCards=_useState10[0],setListCards=_useState10[1];useEffect(function(){var cards;if(recipes.length<1){cards=/*#__PURE__*/_jsx(\"p\",{children:\"No Results\"});}else{cards=recipes.map(function(recipe){return/*#__PURE__*/_jsx(FoodCards,{id:recipe._id,foodName:recipe.name,estimatedPrice:recipe.estimatedPrice,ingredients:recipe.ingredients,steps:recipe.steps},recipe._id);});}setListCards(cards);},[recipes]);return/*#__PURE__*/_jsxs(\"div\",{id:\"homepage\",children:[/*#__PURE__*/_jsx(Navbar2,_objectSpread(_objectSpread({},allRecipes),{},{setRecipeInfo:setRecipeInfo,setCount:setCount,setSearch:setSearch})),/*#__PURE__*/_jsxs(\"div\",{id:\"search-info\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[count,\" recipes found for \\\"\",search,\"\\\"\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"See Also:\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"extra-eating-options\",children:[/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Dinner\",setRecipeInfo:setRecipeInfo,setCount:setCount}),/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Lunch\",setRecipeInfo:setRecipeInfo,setCount:setCount}),/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Breakfast\",setRecipeInfo:setRecipeInfo,setCount:setCount}),/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Dessert\",setRecipeInfo:setRecipeInfo,setCount:setCount}),/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Snacks\",setRecipeInfo:setRecipeInfo,setCount:setCount}),/*#__PURE__*/_jsx(RecomendationCard,{recomendation:\"Drinks\",setRecipeInfo:setRecipeInfo,setCount:setCount})]}),/*#__PURE__*/_jsx(\"div\",{id:\"food-cards-container\",children:listCards}),/*#__PURE__*/_jsx(Footer2,{})]});}export default HomePage;","map":{"version":3,"sources":["/Users/omar/Desktop/Full_Stack_app/college-kitchen/src/pages/HomePage.js"],"names":["React","useState","useEffect","Navbar2","RecomendationCard","FoodCards","Footer2","useGoogleAuth","HomePage","googleUser","tokenID","tokenId","count","setCount","search","setSearch","recipes","setRecipeInfo","allRecipes","setAllRecipes","undefined","sendIdToken","fetch","method","body","JSON","stringify","token","year","Date","getUTCFullYear","headers","fetchData","result","json","length","listCards","setListCards","cards","map","recipe","_id","name","estimatedPrice","ingredients","steps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport RecomendationCard from '../components/RecomendationCard';\nimport FoodCards from '../components/FoodCards';\n//import Eggs from '../imgs/eggs.jpeg';\nimport Footer2 from '../components/Footer2';\nimport { useGoogleAuth } from '../components/GoogleAuthProvider';\n\n\n\n\n\n// ############################## Important Note!!!!! ####################################################\n// ###### Maybe we can do the stuff we just need once (get methods for all recipes) in the App.js!!! ######\n// #######################################################################################################\n\n\n\n\nfunction HomePage() {\n\n    const { googleUser } = useGoogleAuth();\n    const tokenID = googleUser.tokenId;\n\n    const [count, setCount] = useState(0);\n    const [search, setSearch] = useState('Current Recipes');\n    const [recipes, setRecipeInfo] = useState([]);\n    const [allRecipes, setAllRecipes] = useState();\n\n\n\n    //Trial of sending tokenId to backend\n    useEffect(() => {\n        if (tokenID !== undefined) {\n            const sendIdToken = async () => {\n                fetch(`/api/tokensignin`, {\n                    method: 'POST',\n                    body: JSON.stringify({token: tokenID, year: new Date().getUTCFullYear()}),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    }\n                });\n            }\n            sendIdToken();\n        }\n    }, [tokenID]);\n\n    //Get all recipes\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('/api/recipes');\n            const body = await result.json();\n            setAllRecipes(body);\n            setRecipeInfo(body);\n            setCount(body.length);\n        }\n        fetchData();\n    }, []);\n\n    const [listCards, setListCards] = useState(<div></div>);\n\n    useEffect(() => {\n        let cards;\n        if (recipes.length < 1) {\n            cards = <p>No Results</p>;\n        } else {\n            cards = recipes.map((recipe) =>\n                <FoodCards key={recipe._id} id={recipe._id} foodName={recipe.name} estimatedPrice={recipe.estimatedPrice}  ingredients={recipe.ingredients} steps={recipe.steps}/>\n            );\n        }\n        setListCards(cards);\n        \n\n    }, [recipes]);\n    \n\n    return (\n        <div id=\"homepage\">\n            <Navbar2 {...allRecipes} setRecipeInfo={setRecipeInfo} setCount={setCount} setSearch={setSearch}/>\n            <div id=\"search-info\">\n                <h5>{count} recipes found for \"{search}\"</h5>\n                <p>See Also:</p>\n            </div>\n            <div id=\"extra-eating-options\">\n                <RecomendationCard recomendation=\"Dinner\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Lunch\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Breakfast\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Dessert\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Snacks\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Drinks\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n            </div>\n            <div id=\"food-cards-container\">\n                {listCards}\n            </div>\n            <Footer2/>\n        </div>\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}