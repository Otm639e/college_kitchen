{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/components/PrivateRouter.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useGoogleAuth } from \"./GoogleAuthProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRouter = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isSignedIn\n  } = useGoogleAuth();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isSignedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/Signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRouter, \"phiN8SAOzytQfNz1piqk+OT1xCI=\", false, function () {\n  return [useGoogleAuth];\n});\n\n_c = PrivateRouter;\nexport default PrivateRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRouter\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/components/PrivateRouter.js"],"names":["React","Route","Redirect","useGoogleAuth","PrivateRouter","component","Component","rest","isSignedIn","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,sBAA9B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AAAA;;AAEvD,QAAM;AAAEC,IAAAA;AAAF,MAAiBL,aAAa,EAApC;AAEA,sBAEI,QAAC,KAAD,OAAWI,IAAX;AAAiB,IAAA,MAAM,EAAEE,KAAK,IAC1BD,UAAU,gBACN,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YADM,gBAER,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,UAFJ;AAQH,CAZD;;GAAML,a;UAEqBD,a;;;KAFrBC,a;AAcN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport { useGoogleAuth } from \"./GoogleAuthProvider\";\n\nconst PrivateRouter = ({component: Component, ...rest}) => {\n\n    const { isSignedIn } = useGoogleAuth();\n\n    return (\n        \n        <Route {...rest} render={props => (\n            isSignedIn ?\n                <Component {...props} />\n            : <Redirect to=\"/Signin\" />\n        )} />\n    );\n};\n\nexport default PrivateRouter;"]},"metadata":{},"sourceType":"module"}