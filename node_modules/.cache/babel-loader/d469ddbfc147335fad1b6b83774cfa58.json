{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/pages/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport RecomendationCard from '../components/RecomendationCard';\nimport FoodCards from '../components/FoodCards'; //import Eggs from '../imgs/eggs.jpeg';\n\nimport Footer2 from '../components/Footer2';\nimport { useGoogleAuth } from '../components/GoogleAuthProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomePage() {\n  _s();\n\n  const {\n    googleUser\n  } = useGoogleAuth();\n  const [count, setCount] = useState(0);\n  const [search, setSearch] = useState('Current Recipes');\n  const [recipes, setRecipeInfo] = useState([]);\n  const [allRecipes, setAllRecipes] = useState(); //Trial of sending tokenId to backend\n\n  useEffect(() => {\n    const sendIdToken = async () => {\n      console.log('hello');\n      const result = await fetch(`/api/tokensignin`, {\n        method: 'post',\n        body: googleUser.tokenId,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const r = await result.json();\n      console.log(r);\n      console.log('hello');\n    };\n\n    sendIdToken();\n  }, [googleUser.tokenId]); //Get individual recipe from database to be able to reload the recipe page using the recipe name from the link.\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch('/api/recipes');\n      const body = await result.json();\n      setAllRecipes(body);\n      setRecipeInfo(body);\n      setCount(body.length);\n    };\n\n    fetchData();\n  }, []);\n  const [listCards, setListCards] = useState( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 48\n  }, this));\n  useEffect(() => {\n    let cards;\n\n    if (recipes.length < 1) {\n      cards = /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this);\n    } else {\n      cards = recipes.map(recipe => /*#__PURE__*/_jsxDEV(FoodCards, {\n        id: recipe._id,\n        foodName: recipe.name,\n        estimatedPrice: recipe.estimatedPrice,\n        ingredients: recipe.ingredients,\n        steps: recipe.steps\n      }, recipe._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this));\n    }\n\n    setListCards(cards);\n  }, [recipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar2, { ...allRecipes,\n      setRecipeInfo: setRecipeInfo,\n      setCount: setCount,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"search-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [count, \" recipes found for \\\"\", search, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"See Also:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"extra-eating-options\",\n      children: [/*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Dinner\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Lunch\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Breakfast\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Dessert\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Snacks\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecomendationCard, {\n        recomendation: \"Drinks\",\n        setRecipeInfo: setRecipeInfo,\n        setCount: setCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"food-cards-container\",\n      children: listCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"cwJoXyvEpZnJK9awvJKHYz5jUo4=\", false, function () {\n  return [useGoogleAuth];\n});\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/pages/HomePage.js"],"names":["React","useState","useEffect","Navbar2","RecomendationCard","FoodCards","Footer2","useGoogleAuth","HomePage","googleUser","count","setCount","search","setSearch","recipes","setRecipeInfo","allRecipes","setAllRecipes","sendIdToken","console","log","result","fetch","method","body","tokenId","headers","r","json","fetchData","length","listCards","setListCards","cards","map","recipe","_id","name","estimatedPrice","ingredients","steps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar2 from '../components/Navbar2';\nimport RecomendationCard from '../components/RecomendationCard';\nimport FoodCards from '../components/FoodCards';\n//import Eggs from '../imgs/eggs.jpeg';\nimport Footer2 from '../components/Footer2';\nimport { useGoogleAuth } from '../components/GoogleAuthProvider';\n\nfunction HomePage() {\n\n    const { googleUser } = useGoogleAuth();\n\n    const [count, setCount] = useState(0);\n    const [search, setSearch] = useState('Current Recipes');\n\n    const [recipes, setRecipeInfo] = useState([]);\n\n    const [allRecipes, setAllRecipes] = useState();\n\n\n\n    //Trial of sending tokenId to backend\n    useEffect(() => {\n        const sendIdToken = async () => {\n            console.log('hello')\n            const result = await fetch(`/api/tokensignin`, {\n                method: 'post',\n                body: googleUser.tokenId,\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                }\n            });\n            const r = await result.json();\n            console.log(r)\n            console.log('hello')\n        }\n        sendIdToken();\n    }, [googleUser.tokenId]);\n\n\n\n\n    //Get individual recipe from database to be able to reload the recipe page using the recipe name from the link.\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await fetch('/api/recipes');\n            const body = await result.json();\n            setAllRecipes(body);\n            setRecipeInfo(body);\n            setCount(body.length);\n        }\n        fetchData();\n    }, []);\n\n    const [listCards, setListCards] = useState(<div></div>);\n\n    useEffect(() => {\n        let cards;\n        if (recipes.length < 1) {\n            cards = <p>No Results</p>;\n        } else {\n            cards = recipes.map((recipe) =>\n                <FoodCards key={recipe._id} id={recipe._id} foodName={recipe.name} estimatedPrice={recipe.estimatedPrice}  ingredients={recipe.ingredients} steps={recipe.steps}/>\n            );\n        }\n        setListCards(cards);\n        \n\n    }, [recipes]);\n    \n\n    return (\n        <div id=\"homepage\">\n            <Navbar2 {...allRecipes} setRecipeInfo={setRecipeInfo} setCount={setCount} setSearch={setSearch}/>\n            <div id=\"search-info\">\n                <h5>{count} recipes found for \"{search}\"</h5>\n                <p>See Also:</p>\n            </div>\n            <div id=\"extra-eating-options\">\n                <RecomendationCard recomendation=\"Dinner\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Lunch\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Breakfast\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Dessert\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Snacks\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n                <RecomendationCard recomendation=\"Drinks\" setRecipeInfo={setRecipeInfo} setCount={setCount}/>\n            </div>\n            <div id=\"food-cards-container\">\n                {listCards}\n            </div>\n            <Footer2/>\n        </div>\n    );\n}\n\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}