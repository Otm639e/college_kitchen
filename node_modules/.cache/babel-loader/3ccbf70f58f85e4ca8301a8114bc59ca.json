{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Desktop/college-kitchen/src/components/PublicRouter.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; //import { useGoogleAuth } from \"./GoogleAuthProvider\";\n\nimport { useGoogleLogin } from 'react-google-login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PublicRouter = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  const isSignedIn = useGoogleLogin.isSignedIn.get();\n  const {\n    signIn,\n    loaded\n  } = useGoogleLogin;\n  console.log(isSignedIn);\n  console.log(signIn);\n  console.log(loaded);\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => isSignedIn && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PublicRouter;\nexport default PublicRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRouter\");","map":{"version":3,"sources":["/Users/omar/Desktop/college-kitchen/src/components/PublicRouter.js"],"names":["React","Route","Redirect","useGoogleLogin","PublicRouter","component","Component","restricted","rest","isSignedIn","get","signIn","loaded","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmC,KAAGC;AAAtC,CAAD,KAAiD;AAClE,QAAMC,UAAU,GAAGN,cAAc,CAACM,UAAf,CAA0BC,GAA1B,EAAnB;AAEA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBT,cAA3B;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA;AAAA;AACI;AACA;AACA,YAAC,KAAD,OAAWJ,IAAX;AAAiB,MAAA,MAAM,EAAEO,KAAK,IAC1BN,UAAU,IAAIF,UAAd,gBACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEE,QAAC,SAAD,OAAeQ;AAAf;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AAHJ;AASH,CAhBD;;KAAMX,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\n//import { useGoogleAuth } from \"./GoogleAuthProvider\";\nimport { useGoogleLogin } from 'react-google-login';\n\nconst PublicRouter = ({component: Component, restricted, ...rest}) => {\n    const isSignedIn = useGoogleLogin.isSignedIn.get();\n    \n    const { signIn, loaded } = useGoogleLogin;\n    console.log(isSignedIn);\n    console.log(signIn);\n    console.log(loaded);\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isSignedIn && restricted ?\n                <Redirect to=\"/Home\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRouter;"]},"metadata":{},"sourceType":"module"}